{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Desktop/Projects/majon/majonweb/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MahjongGame() {\n  _s();\n  const [roomId, setRoomId] = useState(\"\"); // 當前房間ID\n  const [hand, setHand] = useState([]); // 玩家手牌\n  const [gameMessages, setGameMessages] = useState([]); // 遊戲中的訊息\n  const [socket, setSocket] = useState(null); // WebSocket 連接\n  const [isInRoom, setIsInRoom] = useState(false); // 玩家是否在房間中\n\n  // 當組件首次渲染時，連接到 WebSocket 伺服器\n  useEffect(() => {\n    const newSocket = new WebSocket('ws://localhost:7777');\n    newSocket.onopen = () => {\n      console.log('Connected to WebSocket server');\n    };\n    newSocket.onmessage = event => {\n      const message = event.data.split('|');\n      const action = message[0];\n      if (action === \"room_created\") {\n        setRoomId(message[1]);\n        setIsInRoom(true);\n      } else if (action === \"joined_room\") {\n        setRoomId(message[1]);\n        setIsInRoom(true);\n      } else if (action === \"game_start\") {\n        const tiles = message[1].replace(\"Your hand: \", \"\").split(\", \");\n        setHand(tiles);\n      } else {\n        setGameMessages(prevMessages => [...prevMessages, event.data]);\n      }\n    };\n    newSocket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    setSocket(newSocket);\n\n    // 清理 WebSocket 連接\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // 創建房間\n  const createRoom = () => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(\"create_room\");\n    }\n  };\n\n  // 加入房間\n  const joinRoom = roomId => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(\"join_room|\" + roomId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MahjongGame\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mahjong Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), !isInRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createRoom,\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Room ID\",\n        onChange: e => setRoomId(e.target.value),\n        value: roomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => joinRoom(roomId),\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), isInRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room ID: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Hand:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hand.map((tile, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: \"10px\"\n          },\n          children: tile\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: gameMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(MahjongGame, \"g7y6XCEcDSuEV5Vm/6oB4v0lTrY=\");\n_c = MahjongGame;\nexport default MahjongGame;\nvar _c;\n$RefreshReg$(_c, \"MahjongGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MahjongGame","_s","roomId","setRoomId","hand","setHand","gameMessages","setGameMessages","socket","setSocket","isInRoom","setIsInRoom","newSocket","WebSocket","onopen","console","log","onmessage","event","message","data","split","action","tiles","replace","prevMessages","onclose","close","createRoom","readyState","OPEN","send","joinRoom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","value","map","tile","index","style","marginRight","msg","_c","$RefreshReg$"],"sources":["/Users/ted/Desktop/Projects/majon/majonweb/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\n\nfunction MahjongGame() {\n  const [roomId, setRoomId] = useState(\"\"); // 當前房間ID\n  const [hand, setHand] = useState([]); // 玩家手牌\n  const [gameMessages, setGameMessages] = useState([]); // 遊戲中的訊息\n  const [socket, setSocket] = useState(null); // WebSocket 連接\n  const [isInRoom, setIsInRoom] = useState(false); // 玩家是否在房間中\n\n  // 當組件首次渲染時，連接到 WebSocket 伺服器\n  useEffect(() => {\n    const newSocket = new WebSocket('ws://localhost:7777');\n\n    newSocket.onopen = () => {\n      console.log('Connected to WebSocket server');\n    };\n\n    newSocket.onmessage = (event) => {\n      const message = event.data.split('|');\n      const action = message[0];\n\n      if (action === \"room_created\") {\n        setRoomId(message[1]);\n        setIsInRoom(true);\n      } else if (action === \"joined_room\") {\n        setRoomId(message[1]);\n        setIsInRoom(true);\n      } else if (action === \"game_start\") {\n        const tiles = message[1].replace(\"Your hand: \", \"\").split(\", \");\n        setHand(tiles);\n      } else {\n        setGameMessages(prevMessages => [...prevMessages, event.data]);\n      }\n    };\n\n    newSocket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    setSocket(newSocket);\n\n    // 清理 WebSocket 連接\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // 創建房間\n  const createRoom = () => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(\"create_room\");\n    }\n  };\n\n  // 加入房間\n  const joinRoom = (roomId) => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(\"join_room|\" + roomId);\n    }\n  };\n\n  return (\n    <div className=\"MahjongGame\">\n      <h1>Mahjong Game</h1>\n      {!isInRoom && (\n        <div>\n          <button onClick={createRoom}>Create Room</button>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Room ID\"\n            onChange={(e) => setRoomId(e.target.value)}\n            value={roomId}\n          />\n          <button onClick={() => joinRoom(roomId)}>Join Room</button>\n        </div>\n      )}\n\n      {isInRoom && (\n        <div>\n          <h2>Room ID: {roomId}</h2>\n          <h2>Your Hand:</h2>\n          <div>\n            {hand.map((tile, index) => (\n              <span key={index} style={{ marginRight: \"10px\" }}>\n                {tile}\n              </span>\n            ))}\n          </div>\n\n          <h2>Game Messages:</h2>\n          <div>\n            {gameMessages.map((msg, index) => (\n              <p key={index}>{msg}</p>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MahjongGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}