{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Desktop/Projects/majon/majonweb/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputMessage, setInputMessage] = useState(\"\"); // 用戶輸入的訊息\n  const [serverMessage, setServerMessage] = useState(\"\"); // 從 server 接收到的訊息\n  const [socket, setSocket] = useState(null); // WebSocket 對象\n\n  // 當組件第一次渲染時，連接到 WebSocket Server\n  useEffect(() => {\n    const newSocket = new WebSocket('ws://localhost:7777');\n    newSocket.onopen = () => {\n      console.log('Connected to WebSocket server');\n    };\n    newSocket.onmessage = event => {\n      setServerMessage(event.data); // 設定從 server 收到的訊息\n    };\n    newSocket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    setSocket(newSocket); // 保存 WebSocket 連接\n\n    // 清理 WebSocket 連接\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // 處理用戶輸入變化\n  const handleInputChange = event => {\n    setInputMessage(event.target.value);\n  };\n\n  // 發送訊息給 WebSocket Server\n  const sendMessage = () => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(inputMessage);\n      setInputMessage(\"\"); // 清空輸入框\n    } else {\n      console.log(\"WebSocket is not open.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Message from WebSocket Server: \", serverMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputMessage,\n      onChange: handleInputChange,\n      placeholder: \"Type your message here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qQS787GksJevVId5AnUTL/CQklk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","inputMessage","setInputMessage","serverMessage","setServerMessage","socket","setSocket","newSocket","WebSocket","onopen","console","log","onmessage","event","data","onclose","close","handleInputChange","target","value","sendMessage","readyState","OPEN","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/ted/Desktop/Projects/majon/majonweb/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [inputMessage, setInputMessage] = useState(\"\"); // 用戶輸入的訊息\n  const [serverMessage, setServerMessage] = useState(\"\"); // 從 server 接收到的訊息\n  const [socket, setSocket] = useState(null); // WebSocket 對象\n\n  // 當組件第一次渲染時，連接到 WebSocket Server\n  useEffect(() => {\n    const newSocket = new WebSocket('ws://localhost:7777');\n    \n    newSocket.onopen = () => {\n      console.log('Connected to WebSocket server');\n    };\n\n    newSocket.onmessage = (event) => {\n      setServerMessage(event.data); // 設定從 server 收到的訊息\n    };\n\n    newSocket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    setSocket(newSocket); // 保存 WebSocket 連接\n    \n    // 清理 WebSocket 連接\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // 處理用戶輸入變化\n  const handleInputChange = (event) => {\n    setInputMessage(event.target.value);\n  };\n\n  // 發送訊息給 WebSocket Server\n  const sendMessage = () => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(inputMessage);\n      setInputMessage(\"\"); // 清空輸入框\n    } else {\n      console.log(\"WebSocket is not open.\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Message from WebSocket Server: {serverMessage}</h1>\n      \n      <input\n        type=\"text\"\n        value={inputMessage}\n        onChange={handleInputChange}\n        placeholder=\"Type your message here\"\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEtDD,SAAS,CAACE,MAAM,GAAG,MAAM;MACvBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC;IAEDJ,SAAS,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC/BT,gBAAgB,CAACS,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC;IAEDP,SAAS,CAACQ,OAAO,GAAG,MAAM;MACxBL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC;IAEDL,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC;;IAEtB;IACA,OAAO,MAAM;MACXA,SAAS,CAACS,KAAK,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,iBAAiB,GAAIJ,KAAK,IAAK;IACnCX,eAAe,CAACW,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIf,MAAM,IAAIA,MAAM,CAACgB,UAAU,KAAKb,SAAS,CAACc,IAAI,EAAE;MAClDjB,MAAM,CAACkB,IAAI,CAACtB,YAAY,CAAC;MACzBC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC,MAAM;MACLQ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC;EACF,CAAC;EAED,oBACEb,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3B,OAAA;MAAA2B,QAAA,GAAI,iCAA+B,EAACtB,aAAa;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEvD/B,OAAA;MACEgC,IAAI,EAAC,MAAM;MACXX,KAAK,EAAElB,YAAa;MACpB8B,QAAQ,EAAEd,iBAAkB;MAC5Be,WAAW,EAAC;IAAwB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACF/B,OAAA;MAAQmC,OAAO,EAAEb,WAAY;MAAAK,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAAC7B,EAAA,CAzDQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}